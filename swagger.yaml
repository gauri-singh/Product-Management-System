swagger: "2.0"
info:
  description: "This is Product Management Application with APIs which will make managing the products and your life easy"
  version: "1.0.0"
  title: "Product Management System"
  contact:
    email: "ggauri97@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "Product"
  description: "Products management Apis"
- name: "Find By"
  description: "Products filtering and display"
- name: "Category"
  description: "Categories management Apis"
schemes:
- "http"
paths:
  /product:
    post:
      tags:
      - "Product"
      summary: "Add a new product"
      description: ""
      operationId: "addProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "body"
        name: "body"
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "Successfully added"
          schema:
            $ref: "#/definitions/ApiResponse"
        405:
          description: "Invalid input"
    put:
      tags:
      - "Product"
      summary: "Update an existing Product item via json"
      description: ""
      operationId: "updateProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/Product"
        
      responses:
        200:
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
        405:
          description: "Validation exception"
  /product/{id}:
    get:
      tags:
      - "Product"
      summary: "Find product by SKU"
      description: "Returns a single product"
      operationId: "getProductByid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or the SKU of the product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid  SKU supplied"
        404:
          description: "Product not found"
    put:
      tags:
      - "Product"
      summary: "Update an existing Product item via a form"
      description: ""
      operationId: "updateProductForm"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "SKU of the product"
        required: true
        type: "number"
      - name: "name"
        in: "formData"
        description: "Name of the product"
        required: false
        type: "string"
      
      - name: "price"
        in: "formData"
        description: "Price of the product without tax"
        required: false
        type: "number"

      - name: "category"
        in: "formData"
        description: "Category ID"
        required: false 
        type: "number"

      - name: "size"
        in: "formData"
        description: "Size of the product"
        type: "string"
        enum:
        - "small"
        - "medium"
        - "large"
        required: false
      
      - name: "colour"
        in: "formData"
        description: "Colour of the product"
        required: false
        type: "string"

      - name: "state"
        in: "formData"
        description: "State of the product"
        required: false
        type: "number"
        enum:
        - "live"
        - "draft"
      
      - name: "brand"
        in: "formData"
        description: "brand of the product"
        required: false 
        type: "string"

      - name: "mode"
        in: "formData"
        description: "Mode of availability of theproduct"
        required: false 
        type: "string"
        enum:
        - "online"
        - "offline"
        - "both"

      - name: "metadata"
        in: "formData"
        description: "metadata of the product"
        required: false
        type: "string"
      responses:
        200:
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "Product"
      summary: "Deletes a single product"
      description: ""
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product SKU to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successfully deleted"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid SKU supplied"
        404:
          description: "Product not found"

  /product/uploadImage/{id}:
    post:
      tags:
      - "Product"
      summary: "uploads an image and saves the encrypted filename along with the id"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "SKU of the product to update"
        required: true
        type: "integer"
        format: "int64"
      - name: "file-to-upload"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
      
  /product/findByName:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by Name"
      description: ""
      operationId: "findProductsByName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Name filter that has to be applied"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid Name value"
  /product/findByCategory:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by category"
      description: ""
      operationId: "findProductsByCategory"
      produces:
      - "application/json"
      parameters:
      - name: "category"
        in: "query"
        description: "category filter that has to be applied"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid category value"
  /product/findByState:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by State"
      description: ""
      operationId: "findProductsByState"
      produces:
      - "application/json"
      parameters:
      - name: "state"
        in: "query"
        description: "State filter that has to be applied"
        required: true
        type: "string"
        enum:
          - "live"
          - "draft"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid State value"
  /product/findByBrand:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by Brand"
      description: ""
      operationId: "findProductsByBrand"
      produces:
      - "application/json"
      parameters:
      - name: "brand"
        in: "query"
        description: "Brand filter that has to be applied"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid State value"
  /product/findByColour:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by Colour"
      description: ""
      operationId: "findProductsByColour"
      produces:
      - "application/json"
      parameters:
      - name: "colour"
        in: "query"
        description: "Colour filter that has to be applied"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid Colour value"
  /product/findBySize:
    get:
      tags:
      - "Find By"
      summary: "Finds Products by Size"
      description: ""
      operationId: "findProductsBySize"
      produces:
      - "application/json"
      parameters:
      - name: "size"
        in: "query"
        description: "Size filter that has to be applied"
        required: true
        type: "string"
        enum:
          - "small"
          - "medium"
          - "large"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid Size value"
  /category:
    post:
        tags:
        - "Category"
        summary: "Add a new category"
        description: ""
        operationId: "addCat"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - in : "body"
          name: "body"
          schema:
            $ref: "#/definitions/Category"
        responses:
          200:
            description: "Successfully added"
            schema:
              $ref: "#/definitions/ApiResponse"
          405:
            description: "Invalid input"
    put:
      tags:
      - "Category"
      summary: "Update an existing Category"
      description: ""
      operationId: "updateCat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/Category"
        
      responses:
        200:
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Category not found"
        405:
          description: "Validation exception"
  /category/{id}:
    get:
      tags:
      - "Category"
      summary: "Find category by cid"
      description: "Returns a single category"
      operationId: "getCategoryByid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or the SKU of the Category to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid  SKU supplied"
        404:
          description: "Category not found"  
    delete:
      tags:
      - "Category"
      summary: "Deletes a single Category and all the products with that cid"
      description: ""
      operationId: "deleteCategory"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Category cid to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successfully deleted"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid SKU supplied"
        404:
          description: "Category not found"

definitions:
  Category:
    type: "object"
    required:
      - id
      - name
      - tax
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tax:
        description: "Percentage of tax on the items of this category"
        type: "number"
        minimum: 0
        maximum: 1

  
  Product:
    type: "object"
    required:
    - "id"
    - "name"
    - "price"
    - "category"
    - "state"
    - "mode"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Milk"

      price:
        type: "number"
        example: 56.66
        description: "Product price without tax"

      category:
        type: "number"
        description: "Category Id"

      state:
        type: "string"
        description: "Product current State"
        enum:
        - "live"
        - "draft"
      mode:
        type: "string"
        description: "Product mode of Availability"
        enum:
        - "online"
        - "offline"
        - "both"
        
      size:
        type: "string"
        description: "Size of the product"
        enum:
        - "small"
        - "medium"
        - "large"
      
      colour:
        type: "string"
        example: "Red"
        description: "Colour of the product if any"
     
      brand:
        type: "string"
        example: "Amul"
        description: "Brand of the product if any"

      metadata:
        type: "string"
        description: "Details and descriptions about the product"
  ApiResponse:
    type: "object"
    properties:
      message:
        type: "string"


